import type { PrinterStatusProperties } from '../types';
export declare const InitPrinterErrorMessageMapping: {
    readonly [x: number]: "An invalid parameter was passed." | "An unknown error occurred." | "Memory necessary for processing could not be allocated." | "A model name or language not supported was specified.";
};
export declare const ConnectPrinterErrorMessageMapping: {
    readonly [x: number]: "An invalid parameter was passed." | "An unknown error occurred." | "Could not run the process." | "Memory necessary for processing could not be allocated." | "Failed to open the device." | "Failed to communicate with the devices within the specified time." | "Tried to start communication with a printer with which communication had been already established. Tried to start communication with a printer during reconnection process." | "The device could not be found." | "The device was in use." | "The device type is different." | "Failed to recover the printer.";
};
export declare const DisconnectPrinterErrorMessageMapping: {
    readonly [x: number]: "An unknown error occurred." | "Could not run the process." | "Tried to end communication where it had not been established." | "Necessary memory could not be allocated." | "Failed to disconnect the device.T ried to terminate communication with a printer during reconnection process." | "Printer is not initialized. Please call init() first.";
};
export declare const CommonOperationErrorMessageMapping: {
    readonly [x: number]: "An invalid parameter was passed." | "An unknown error occurred." | "Memory necessary for processing could not be allocated." | "Printer is not initialized. Please call init() first.";
};
export declare const SendDataPrinterErrorMessageMapping: {
    readonly [x: number]: "An invalid parameter was passed." | "An unknown error occurred." | "Could not run the process." | "Memory necessary for processing could not be allocated." | "Printer is not initialized. Please call init() first." | "The control commands have not been buffered. This API was called while no communication had been started.";
};
export declare const PrintErrorCodeMessageMapping: {
    [x: number]: string;
};
export declare const GetPrinterSettingsPaperWidthValuesMapping: {
    [x: number]: number;
};
export declare const GetPrinterSettingsPrintDencityValuesMapping: {
    [x: number]: number;
};
export declare const GetPrinterSettingsPrintSpeendValuesMapping: {
    [x: number]: number;
};
export declare const GetPrinterStatusMessageMapping: Record<PrinterStatusProperties, Record<string, string>>;
export type PrinterErrorMessageMapping = typeof InitPrinterErrorMessageMapping | typeof ConnectPrinterErrorMessageMapping | typeof DisconnectPrinterErrorMessageMapping | typeof CommonOperationErrorMessageMapping | typeof SendDataPrinterErrorMessageMapping | typeof PrintErrorCodeMessageMapping | typeof GetPrinterSettingsPaperWidthValuesMapping;
//# sourceMappingURL=valuesToMessagesMappers.d.ts.map