
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNEspPosPrinterSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_initWithPrinterDeviceName(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "initWithPrinterDeviceName", "(Ljava/lang/String;Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_connect(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "connect", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_disconnect(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "disconnect", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_clearCommandBuffer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "clearCommandBuffer", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addText(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addText", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addTextLang(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addTextLang", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addFeedLine(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addFeedLine", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addLineSpace(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addLineSpace", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addCut(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addCut", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_sendData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "sendData", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_getPrinterSetting(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPrinterSetting", "(Ljava/lang/String;DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_getStatus(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "getStatus", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addImage", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;DDDDDDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addBarcode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addBarcode", "(Ljava/lang/String;Ljava/lang/String;DDDDDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addSymbol(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addSymbol", "(Ljava/lang/String;Ljava/lang/String;DDDDDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addCommand(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addCommand", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addPulse(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addPulse", "(Ljava/lang/String;DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addTextAlign(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addTextAlign", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addTextSize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addTextSize", "(Ljava/lang/String;DDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addTextSmooth(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addTextSmooth", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterSpecJSI_addTextStyle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "addTextStyle", "(Ljava/lang/String;DDDDLcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeEscPosPrinterSpecJSI::NativeEscPosPrinterSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeEscPosPrinterSpecJSI_getConstants};
  methodMap_["initWithPrinterDeviceName"] = MethodMetadata {3, __hostFunction_NativeEscPosPrinterSpecJSI_initWithPrinterDeviceName};
  methodMap_["connect"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_connect};
  methodMap_["disconnect"] = MethodMetadata {1, __hostFunction_NativeEscPosPrinterSpecJSI_disconnect};
  methodMap_["clearCommandBuffer"] = MethodMetadata {1, __hostFunction_NativeEscPosPrinterSpecJSI_clearCommandBuffer};
  methodMap_["addText"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addText};
  methodMap_["addTextLang"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addTextLang};
  methodMap_["addFeedLine"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addFeedLine};
  methodMap_["addLineSpace"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addLineSpace};
  methodMap_["addCut"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addCut};
  methodMap_["sendData"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_sendData};
  methodMap_["getPrinterSetting"] = MethodMetadata {3, __hostFunction_NativeEscPosPrinterSpecJSI_getPrinterSetting};
  methodMap_["getStatus"] = MethodMetadata {1, __hostFunction_NativeEscPosPrinterSpecJSI_getStatus};
  methodMap_["addImage"] = MethodMetadata {8, __hostFunction_NativeEscPosPrinterSpecJSI_addImage};
  methodMap_["addBarcode"] = MethodMetadata {7, __hostFunction_NativeEscPosPrinterSpecJSI_addBarcode};
  methodMap_["addSymbol"] = MethodMetadata {7, __hostFunction_NativeEscPosPrinterSpecJSI_addSymbol};
  methodMap_["addCommand"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addCommand};
  methodMap_["addPulse"] = MethodMetadata {3, __hostFunction_NativeEscPosPrinterSpecJSI_addPulse};
  methodMap_["addTextAlign"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addTextAlign};
  methodMap_["addTextSize"] = MethodMetadata {3, __hostFunction_NativeEscPosPrinterSpecJSI_addTextSize};
  methodMap_["addTextSmooth"] = MethodMetadata {2, __hostFunction_NativeEscPosPrinterSpecJSI_addTextSmooth};
  methodMap_["addTextStyle"] = MethodMetadata {5, __hostFunction_NativeEscPosPrinterSpecJSI_addTextStyle};
}
static facebook::jsi::Value __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_startDiscovery(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "startDiscovery", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_stopDiscovery(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "stopDiscovery", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_enableLocationSetting(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "enableLocationSetting", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_pairBluetoothDevice(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "pairBluetoothDevice", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

NativeEscPosPrinterDiscoverySpecJSI::NativeEscPosPrinterDiscoverySpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_getConstants};
  methodMap_["startDiscovery"] = MethodMetadata {1, __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_startDiscovery};
  methodMap_["stopDiscovery"] = MethodMetadata {0, __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_stopDiscovery};
  methodMap_["enableLocationSetting"] = MethodMetadata {0, __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_enableLocationSetting};
  methodMap_["pairBluetoothDevice"] = MethodMetadata {1, __hostFunction_NativeEscPosPrinterDiscoverySpecJSI_pairBluetoothDevice};
  eventEmitterMap_["onDiscovery"] = std::make_shared<AsyncEventEmitter<folly::dynamic>>();
  eventEmitterMap_["enableLocationSettingSuccess"] = std::make_shared<AsyncEventEmitter<folly::dynamic>>();
  eventEmitterMap_["enableLocationSettingFailure"] = std::make_shared<AsyncEventEmitter<folly::dynamic>>();
  setEventEmitterCallback(params.instance);
}

std::shared_ptr<TurboModule> RNEspPosPrinterSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "EscPosPrinter") {
    return std::make_shared<NativeEscPosPrinterSpecJSI>(params);
  }
  if (moduleName == "EscPosPrinterDiscovery") {
    return std::make_shared<NativeEscPosPrinterDiscoverySpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
